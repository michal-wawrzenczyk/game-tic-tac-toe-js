/* "*" - everything selector. Selects all HTML elements */
*, *::before, *::after {
    box-sizing: border-box;
    /* This property allows us to include the padding and border in an element's total width and height. */
}

:root {
    --cell-size: 150px;
    --mark-size: calc(var(--cell-size)*.9);
    /* Mark size will cover 90% of cell size. */
}

body {
    margin: 0;
    /* In most major browsers, the default margin is 8px on all sides. Property margin set to 0 removes default body margin.*/
    background-color: darkslategray;
}

.board {
    width: 100vw;
    height: 100vh;
    /* The board is gonna fill the entire screen (100vw = 100% viewport width). */
    display: grid;
    justify-content: center;
    align-content: center;
    /* Everything inside of the board is gonna be centered inside the board div. */
    justify-items: center;
    align-items: center;
    /* X's and O's centered inside the cells. */
    grid-template-columns: repeat(3, auto);
    /* It makes 3 separate auto-size columns from one 9 div's column. */
}

.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    border: 1px solid white;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
    border-top: none;
}

.cell:nth-child(3n + 1) {
    border-left: none;
}

.cell:nth-child(3n + 3) {
    border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
    border-bottom: none;
}

.cell.x,
.cell.o {
    cursor: not-allowed;
}

.cell.x::before,
.cell.x::after {
    background-color: red;
}

.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after {
    background-color: darkred;
    /* The mark will be darker every time we hover an empty cell. */
}

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::before,
    /* "not(.x):not(.o)" means the hover effect will occur only for empty cells. */
.board.x .cell:not(.x):not(.o):hover::after {
    content: '';
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
    position: absolute;
}

.cell.x::before,
.board.x .cell:not(.x):not(.o):hover::before {
    transform: rotate(45deg);
}

.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::after {
    transform: rotate(-45deg);
}

.cell.o::before {
    background-color: gold;
}

.board.o .cell:not(.x):not(.o):hover::before {
    background-color: darkgoldenrod;
}

.cell.o::before,
.cell.o::after,
/* When we are on a board with o (circle) class, we want to get to the cells that are not already occupied by X or O and we want to check when we hover over them and style before and after element  to be the same.  */
.board.o .cell:not(.x):not(.o):hover::before,
.board.o .cell:not(.x):not(.o):hover::after {
    content: '';
    border-radius: 50%;
    position: absolute;
}

.cell.o::before,
.board.o .cell:not(.x):not(.o):hover::before {
    width: calc(var(--mark-size) * .9);
    height: calc(var(--mark-size) * .9);
}

.cell.o::after,
.board.o .cell:not(.x):not(.o):hover::after {
    width: calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    background-color: darkslategray;
}

.message {
    display: none; /* Do not show by default. Show it only when class "show" is applied. */
    position: fixed;
    right: 0;
    left: 0;
    top: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, .5);
    flex-direction: column;
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 50px;
}

.message button {
    margin-top: 10px;
    background-color: white;
    border: 5px solid black;
    font-size: 30px;
    padding: 15px;
    cursor: pointer;
}

.message button:hover {
    background-color: green;
    color: white;
}

.message.show {
    display: flex;
}